/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Simple RNA Sequencing Pipeline
# Author: Weronika Jaśkowiak, Maike Nägele, Tabea Attig, Annika Maier
# Date: 11.10.2024
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    CONFIGURATION FILE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    This configuration file defines the parameters, profiles, and registry settings for
    the Nextflow pipeline. It specifies execution environments, memory/CPU requirements,
    container usage, and other settings required for the workflow.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/


/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    PARAMETERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Global parameters that define memory, CPU, and time limits for the workflow tasks.
    These parameters can be modified as needed for different use cases or environments.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
params {
    max_memory = '16.GB'        // Maximum memory allocated per task
    max_cpus   = 4              // Maximum number of CPUs per task
    max_time   = '48h'          // Maximum time allowed for each task
}



/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    EXECUTION PROFILES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Define the environment and settings for the workflow. Each profile corresponds to
    a different execution environment, specifying tools like Conda, Docker, Singularity,
    or Podman. The profiles manage tool environments, memory, and CPU allocations.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

profiles {

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Debug Profile
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        This profile enables detailed debugging information and prevents cleanup of
        working directories. It can be used for troubleshooting during development.
    */
    debug {
        dumpHashes              = true    // Enable task hash dumping for debugging purposes
        process.beforeScript    = 'echo $HOSTNAME'  // Print the hostname before each task starts
        cleanup                 = false   // Prevent cleanup of working directories
        nextflow.enable.configProcessNamesValidation = true  // Validate process names in config
    }

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Conda Profile
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        This profile enables the use of Conda for package management. It disables other
        container systems like Docker and Singularity.
    */
    conda {
        conda.enabled           = true    // Enable Conda for environment management
        docker.enabled          = false   // Disable Docker
        singularity.enabled     = false   // Disable Singularity
        podman.enabled          = false   // Disable Podman
        shifter.enabled         = false   // Disable Shifter
        charliecloud.enabled    = false   // Disable Charliecloud
        conda.channels          = ['conda-forge', 'bioconda', 'defaults']  // Specify Conda channels
        apptainer.enabled       = false   // Disable Apptainer
    }

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Mamba Profile
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        This profile uses Mamba, a faster alternative to Conda, for package management.
        It disables other container systems and tools.
    */
    mamba {
        conda.enabled           = true    // Enable Conda
        conda.useMamba          = true    // Use Mamba instead of Conda for faster package resolution
        docker.enabled          = false   // Disable Docker
        singularity.enabled     = false   // Disable Singularity
        podman.enabled          = false   // Disable Podman
        shifter.enabled         = false   // Disable Shifter
        charliecloud.enabled    = false   // Disable Charliecloud
        apptainer.enabled       = false   // Disable Apptainer
    }

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Docker Profile
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        This profile enables the use of Docker containers for executing tasks. Other
        container and package management systems like Conda and Singularity are disabled.
    */
    docker {
        docker.enabled          = true    // Enable Docker container execution
        conda.enabled           = false   // Disable Conda
        singularity.enabled     = false   // Disable Singularity
        podman.enabled          = false   // Disable Podman
        shifter.enabled         = false   // Disable Shifter
        charliecloud.enabled    = false   // Disable Charliecloud
        apptainer.enabled       = false   // Disable Apptainer
        docker.runOptions       = '-u $(id -u):$(id -g)'  // Run as the current user to avoid permission issues
    }

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        ARM Architecture Docker Profile
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        This profile enables Docker for ARM-based systems (e.g., Apple Silicon). It forces
        Docker to emulate the x86_64 architecture for compatibility.
    */
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'  // Force Docker to run on x86_64
    }

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Singularity Profile
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        This profile enables the use of Singularity containers. Other container and
        environment management systems are disabled.
    */
    singularity {
        singularity.enabled     = true    // Enable Singularity container execution
        singularity.autoMounts  = true    // Automatically mount directories required by Singularity
        conda.enabled           = false   // Disable Conda
        docker.enabled          = false   // Disable Docker
        podman.enabled          = false   // Disable Podman
        shifter.enabled         = false   // Disable Shifter
        charliecloud.enabled    = false   // Disable Charliecloud
        apptainer.enabled       = false   // Disable Apptainer
    }

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Podman Profile
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        This profile enables the use of Podman containers, an alternative to Docker.
    */
    podman {
        podman.enabled          = true    // Enable Podman container execution
        conda.enabled           = false   // Disable Conda
        docker.enabled          = false   // Disable Docker
        singularity.enabled     = false   // Disable Singularity
        shifter.enabled         = false   // Disable Shifter
        charliecloud.enabled    = false   // Disable Charliecloud
        apptainer.enabled       = false   // Disable Apptainer
    }

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Shifter Profile
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        This profile enables Shifter, another container system for HPC environments.
    */
    shifter {
        shifter.enabled         = true    // Enable Shifter container execution
        conda.enabled           = false   // Disable Conda
        docker.enabled          = false   // Disable Docker
        singularity.enabled     = false   // Disable Singularity
        podman.enabled          = false   // Disable Podman
        charliecloud.enabled    = false   // Disable Charliecloud
        apptainer.enabled       = false   // Disable Apptainer
    }

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Charliecloud Profile
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        This profile enables the use of Charliecloud containers.
    */
    charliecloud {
        charliecloud.enabled    = true    // Enable Charliecloud container execution
        conda.enabled           = false   // Disable Conda
        docker.enabled          = false   // Disable Docker
        singularity.enabled     = false   // Disable Singularity
        podman.enabled          = false   // Disable Podman
        shifter.enabled         = false   // Disable Shifter
        apptainer.enabled       = false   // Disable Apptainer
    }

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Apptainer Profile
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        This profile enables Apptainer containers for execution.
    */
    apptainer {
        apptainer.enabled       = true    // Enable Apptainer container execution
        apptainer.autoMounts    = true    // Automatically mount required directories
        conda.enabled           = false   // Disable Conda
        docker.enabled          = false   // Disable Docker
        singularity.enabled     = false   // Disable Singularity
        podman.enabled          = false   // Disable Podman
        shifter.enabled         = false   // Disable Shifter
        charliecloud.enabled    = false   // Disable Charliecloud
    }

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Wave Profile
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        The Wave profile allows for running tasks in a reproducible environment using
        Conda or containerized images pulled automatically.
    */
    wave {
        apptainer.ociAutoPull   = true    // Enable automatic pulling of OCI images for Apptainer
        singularity.ociAutoPull = true    // Enable automatic pulling of OCI images for Singularity
        wave.enabled            = true    // Enable Wave execution
        wave.freeze             = true    // Freeze environments to prevent modification
        wave.strategy           = 'conda,container'  // Use Conda or container-based strategies
    }

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Gitpod Profile
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        The Gitpod profile is used for cloud-based development environments.
    */
    gitpod {
        executor.name           = 'local'    // Use local execution
        executor.cpus           = 4          // Allocate 4 CPUs for tasks
        executor.memory         = 8.GB       // Allocate 8GB of memory
    }
}


/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    REGISTRY SETTINGS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Define the container registries for Apptainer, Docker, and Podman containers.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

apptainer.registry   = 'quay.io'        // Registry for Apptainer containers
docker.registry      = 'quay.io'        // Registry